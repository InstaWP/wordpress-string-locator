# Automatically create a release whenever a version-tag is created.
name: Create release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Create release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Set up Composer caching
        uses: actions/cache@v2
        env:
          cache-name: cache-composer-dependencies
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '16'

      - name: PHP Syntax check
        working-directory: ./
        run: find . \( -name '*.php' \) -exec php -lf {} \;

      - name: Set up composer
        working-directory: ./
        run: composer install

      - name: PHPCS
        working-directory: ./
        run: composer run check-cs

      - name: Set up node modules
        working-directory: ./
        run: npm ci

      - name: CSS Lint
        working-directory: ./
        run: npm run lint:css

      - name: JavaScript Lint
        working-directory: ./
        run: npm run lint:js

      - name: Create build
        working-directory: ./
        run: npm run build

      - name: Get changelog entries
        id: changelog
        working-directory: ./docs
        run: |
          changelog=$(grep -A100 -m1 -e '== Changelog ==' readme.txt)
          changelog="${changelog//'%'/'%25'}"
          changelog="${changelog//$'\n'/'%0A'}"
          changelog="${changelog//$'\r'/'%0D'}"
          echo $changelog
          echo "::set-output name=changes::$changelog"

      - name: Remove unneccesary assets
        working-directory: ./
        run: |
          mv docs/changelog.txt ./changelog.txt
          mv docs/readme.txt ./readme.txt
          rm -rf node_modules
          rm -rf src
          rm -rf .git
          rm -rf .github
          rm -rf docs
          rm -rf vendor
          rm -rf .editorconfig
          rm -rf .eslintignore
          rm -rf .eslintrc.js
          rm -rf .gitignore
          rm -rf .jscsrc
          rm -rf .wp-env.json
          rm -rf composer.json
          rm -rf composer.lock
          rm -rf package.json
          rm -rf package-lock.json
          rm -rf phpcs.xml.dist
          rm -rf README.md

      - name: Package build
        working-directory: ./
        run: |
          mkdir string-locator
          ls | grep -v string-locator/ | xargs mv -t string-locator
          zip -r string-locator string-locator

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          body: ${{ steps.changelog.outputs.changes }}
          prerelease: false

      - name: Upload release build
        id: upload_release_assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./string-locator.zip
          asset_name: string-locator.zip
          asset_content_type: application/zip
